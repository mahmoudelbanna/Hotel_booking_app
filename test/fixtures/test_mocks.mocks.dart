// Mocks generated by Mockito 5.4.5 from annotations
// in hotel_booking_app/test/fixtures/test_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:connectivity_plus/connectivity_plus.dart' as _i4;
import 'package:dartz/dartz.dart' as _i3;
import 'package:dio/dio.dart' as _i7;
import 'package:flutter_bloc/flutter_bloc.dart' as _i9;
import 'package:hotel_booking_app/hotel_booking_app.dart' as _i2;
import 'package:hydrated_bloc/hydrated_bloc.dart' as _i10;
import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetHotels_0 extends _i1.SmartFake implements _i2.GetHotels {
  _FakeGetHotels_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHotelsRepository_1 extends _i1.SmartFake
    implements _i2.HotelsRepository {
  _FakeHotelsRepository_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeEither_2<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeToggleFavoriteUseCase_3 extends _i1.SmartFake
    implements _i2.ToggleFavoriteUseCase {
  _FakeToggleFavoriteUseCase_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFavoriteState_4 extends _i1.SmartFake implements _i2.FavoriteState {
  _FakeFavoriteState_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLanguageState_5 extends _i1.SmartFake implements _i2.LanguageState {
  _FakeLanguageState_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConnectivity_6 extends _i1.SmartFake implements _i4.Connectivity {
  _FakeConnectivity_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInternetConnectionChecker_7 extends _i1.SmartFake
    implements _i5.InternetConnectionChecker {
  _FakeInternetConnectionChecker_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamSubscription_8<T> extends _i1.SmartFake
    implements _i6.StreamSubscription<T> {
  _FakeStreamSubscription_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInternetState_9 extends _i1.SmartFake implements _i2.InternetState {
  _FakeInternetState_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDuration_10 extends _i1.SmartFake implements Duration {
  _FakeDuration_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAddressCheckResult_11 extends _i1.SmartFake
    implements _i5.AddressCheckResult {
  _FakeAddressCheckResult_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseOptions_12 extends _i1.SmartFake implements _i7.BaseOptions {
  _FakeBaseOptions_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHttpClientAdapter_13 extends _i1.SmartFake
    implements _i7.HttpClientAdapter {
  _FakeHttpClientAdapter_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransformer_14 extends _i1.SmartFake implements _i7.Transformer {
  _FakeTransformer_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInterceptors_15 extends _i1.SmartFake implements _i7.Interceptors {
  _FakeInterceptors_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_16<T1> extends _i1.SmartFake implements _i7.Response<T1> {
  _FakeResponse_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDio_17 extends _i1.SmartFake implements _i7.Dio {
  _FakeDio_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FetchHotelsCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchHotelsCubit extends _i1.Mock implements _i2.FetchHotelsCubit {
  MockFetchHotelsCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetHotels get usecase =>
      (super.noSuchMethod(
            Invocation.getter(#usecase),
            returnValue: _FakeGetHotels_0(this, Invocation.getter(#usecase)),
          )
          as _i2.GetHotels);

  @override
  _i2.FetchHotelsState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i8.dummyValue<_i2.FetchHotelsState>(
              this,
              Invocation.getter(#state),
            ),
          )
          as _i2.FetchHotelsState);

  @override
  _i6.Stream<_i2.FetchHotelsState> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i6.Stream<_i2.FetchHotelsState>.empty(),
          )
          as _i6.Stream<_i2.FetchHotelsState>);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  void fetchHotels() => super.noSuchMethod(
    Invocation.method(#fetchHotels, []),
    returnValueForMissingStub: null,
  );

  @override
  void emit(_i2.FetchHotelsState? state) => super.noSuchMethod(
    Invocation.method(#emit, [state]),
    returnValueForMissingStub: null,
  );

  @override
  void onChange(_i9.Change<_i2.FetchHotelsState>? change) => super.noSuchMethod(
    Invocation.method(#onChange, [change]),
    returnValueForMissingStub: null,
  );

  @override
  void addError(Object? error, [StackTrace? stackTrace]) => super.noSuchMethod(
    Invocation.method(#addError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  void onError(Object? error, StackTrace? stackTrace) => super.noSuchMethod(
    Invocation.method(#onError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}

/// A class which mocks [GetHotels].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetHotels extends _i1.Mock implements _i2.GetHotels {
  MockGetHotels() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HotelsRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeHotelsRepository_1(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.HotelsRepository);

  @override
  _i6.Future<_i3.Either<_i2.Failure, List<_i2.Hotel>>> call() =>
      (super.noSuchMethod(
            Invocation.method(#call, []),
            returnValue:
                _i6.Future<_i3.Either<_i2.Failure, List<_i2.Hotel>>>.value(
                  _FakeEither_2<_i2.Failure, List<_i2.Hotel>>(
                    this,
                    Invocation.method(#call, []),
                  ),
                ),
          )
          as _i6.Future<_i3.Either<_i2.Failure, List<_i2.Hotel>>>);
}

/// A class which mocks [HotelsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHotelsRemoteDataSource extends _i1.Mock
    implements _i2.HotelsRemoteDataSource {
  MockHotelsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i2.HotelModel>> getHotels() =>
      (super.noSuchMethod(
            Invocation.method(#getHotels, []),
            returnValue: _i6.Future<List<_i2.HotelModel>>.value(
              <_i2.HotelModel>[],
            ),
          )
          as _i6.Future<List<_i2.HotelModel>>);
}

/// A class which mocks [HotelsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHotelsRepository extends _i1.Mock implements _i2.HotelsRepository {
  MockHotelsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.Either<_i2.Failure, List<_i2.Hotel>>> getHotels() =>
      (super.noSuchMethod(
            Invocation.method(#getHotels, []),
            returnValue:
                _i6.Future<_i3.Either<_i2.Failure, List<_i2.Hotel>>>.value(
                  _FakeEither_2<_i2.Failure, List<_i2.Hotel>>(
                    this,
                    Invocation.method(#getHotels, []),
                  ),
                ),
          )
          as _i6.Future<_i3.Either<_i2.Failure, List<_i2.Hotel>>>);
}

/// A class which mocks [FavoriteBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoriteBloc extends _i1.Mock implements _i2.FavoriteBloc {
  MockFavoriteBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ToggleFavoriteUseCase get toggleFavoriteUseCase =>
      (super.noSuchMethod(
            Invocation.getter(#toggleFavoriteUseCase),
            returnValue: _FakeToggleFavoriteUseCase_3(
              this,
              Invocation.getter(#toggleFavoriteUseCase),
            ),
          )
          as _i2.ToggleFavoriteUseCase);

  @override
  _i2.FavoriteState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeFavoriteState_4(this, Invocation.getter(#state)),
          )
          as _i2.FavoriteState);

  @override
  _i6.Stream<_i2.FavoriteState> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i6.Stream<_i2.FavoriteState>.empty(),
          )
          as _i6.Stream<_i2.FavoriteState>);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i8.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  String get storagePrefix =>
      (super.noSuchMethod(
            Invocation.getter(#storagePrefix),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.getter(#storagePrefix),
            ),
          )
          as String);

  @override
  String get storageToken =>
      (super.noSuchMethod(
            Invocation.getter(#storageToken),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.getter(#storageToken),
            ),
          )
          as String);

  @override
  _i2.FavoriteState? fromJson(Map<String, dynamic>? json) =>
      (super.noSuchMethod(Invocation.method(#fromJson, [json]))
          as _i2.FavoriteState?);

  @override
  Map<String, dynamic>? toJson(_i2.FavoriteState? state) =>
      (super.noSuchMethod(Invocation.method(#toJson, [state]))
          as Map<String, dynamic>?);

  @override
  void add(_i2.FavoriteEvent? event) => super.noSuchMethod(
    Invocation.method(#add, [event]),
    returnValueForMissingStub: null,
  );

  @override
  void onEvent(_i2.FavoriteEvent? event) => super.noSuchMethod(
    Invocation.method(#onEvent, [event]),
    returnValueForMissingStub: null,
  );

  @override
  void emit(_i2.FavoriteState? state) => super.noSuchMethod(
    Invocation.method(#emit, [state]),
    returnValueForMissingStub: null,
  );

  @override
  void on<E extends _i2.FavoriteEvent>(
    _i9.EventHandler<E, _i2.FavoriteState>? handler, {
    _i9.EventTransformer<E>? transformer,
  }) => super.noSuchMethod(
    Invocation.method(#on, [handler], {#transformer: transformer}),
    returnValueForMissingStub: null,
  );

  @override
  void onTransition(
    _i9.Transition<_i2.FavoriteEvent, _i2.FavoriteState>? transition,
  ) => super.noSuchMethod(
    Invocation.method(#onTransition, [transition]),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void onChange(_i9.Change<_i2.FavoriteState>? change) => super.noSuchMethod(
    Invocation.method(#onChange, [change]),
    returnValueForMissingStub: null,
  );

  @override
  void addError(Object? error, [StackTrace? stackTrace]) => super.noSuchMethod(
    Invocation.method(#addError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  void onError(Object? error, StackTrace? stackTrace) => super.noSuchMethod(
    Invocation.method(#onError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  void hydrate({_i10.Storage? storage}) => super.noSuchMethod(
    Invocation.method(#hydrate, [], {#storage: storage}),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}

/// A class which mocks [LanguageCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguageCubit extends _i1.Mock implements _i2.LanguageCubit {
  MockLanguageCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LanguageState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeLanguageState_5(this, Invocation.getter(#state)),
          )
          as _i2.LanguageState);

  @override
  _i6.Stream<_i2.LanguageState> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i6.Stream<_i2.LanguageState>.empty(),
          )
          as _i6.Stream<_i2.LanguageState>);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i8.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  String get storagePrefix =>
      (super.noSuchMethod(
            Invocation.getter(#storagePrefix),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.getter(#storagePrefix),
            ),
          )
          as String);

  @override
  String get storageToken =>
      (super.noSuchMethod(
            Invocation.getter(#storageToken),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.getter(#storageToken),
            ),
          )
          as String);

  @override
  void languageSelected(String? languageCode, String? countryCode) =>
      super.noSuchMethod(
        Invocation.method(#languageSelected, [languageCode, countryCode]),
        returnValueForMissingStub: null,
      );

  @override
  _i2.LanguageState fromJson(Map<String, dynamic>? json) =>
      (super.noSuchMethod(
            Invocation.method(#fromJson, [json]),
            returnValue: _FakeLanguageState_5(
              this,
              Invocation.method(#fromJson, [json]),
            ),
          )
          as _i2.LanguageState);

  @override
  Map<String, dynamic> toJson(_i2.LanguageState? state) =>
      (super.noSuchMethod(
            Invocation.method(#toJson, [state]),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  void emit(_i2.LanguageState? state) => super.noSuchMethod(
    Invocation.method(#emit, [state]),
    returnValueForMissingStub: null,
  );

  @override
  void onChange(_i9.Change<_i2.LanguageState>? change) => super.noSuchMethod(
    Invocation.method(#onChange, [change]),
    returnValueForMissingStub: null,
  );

  @override
  void addError(Object? error, [StackTrace? stackTrace]) => super.noSuchMethod(
    Invocation.method(#addError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  void onError(Object? error, StackTrace? stackTrace) => super.noSuchMethod(
    Invocation.method(#onError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void hydrate({_i10.Storage? storage}) => super.noSuchMethod(
    Invocation.method(#hydrate, [], {#storage: storage}),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}

/// A class which mocks [InternetCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetCubit extends _i1.Mock implements _i2.InternetCubit {
  MockInternetCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Connectivity get connectivity =>
      (super.noSuchMethod(
            Invocation.getter(#connectivity),
            returnValue: _FakeConnectivity_6(
              this,
              Invocation.getter(#connectivity),
            ),
          )
          as _i4.Connectivity);

  @override
  _i5.InternetConnectionChecker get connectionChecker =>
      (super.noSuchMethod(
            Invocation.getter(#connectionChecker),
            returnValue: _FakeInternetConnectionChecker_7(
              this,
              Invocation.getter(#connectionChecker),
            ),
          )
          as _i5.InternetConnectionChecker);

  @override
  _i6.StreamSubscription<dynamic> get connectivityStreamSubscription =>
      (super.noSuchMethod(
            Invocation.getter(#connectivityStreamSubscription),
            returnValue: _FakeStreamSubscription_8<dynamic>(
              this,
              Invocation.getter(#connectivityStreamSubscription),
            ),
          )
          as _i6.StreamSubscription<dynamic>);

  @override
  set connectivityStreamSubscription(
    _i6.StreamSubscription<dynamic>? _connectivityStreamSubscription,
  ) => super.noSuchMethod(
    Invocation.setter(
      #connectivityStreamSubscription,
      _connectivityStreamSubscription,
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i6.StreamSubscription<dynamic> get internetCheckerSubscription =>
      (super.noSuchMethod(
            Invocation.getter(#internetCheckerSubscription),
            returnValue: _FakeStreamSubscription_8<dynamic>(
              this,
              Invocation.getter(#internetCheckerSubscription),
            ),
          )
          as _i6.StreamSubscription<dynamic>);

  @override
  set internetCheckerSubscription(
    _i6.StreamSubscription<dynamic>? _internetCheckerSubscription,
  ) => super.noSuchMethod(
    Invocation.setter(
      #internetCheckerSubscription,
      _internetCheckerSubscription,
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i2.InternetState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeInternetState_9(this, Invocation.getter(#state)),
          )
          as _i2.InternetState);

  @override
  _i6.Stream<_i2.InternetState> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i6.Stream<_i2.InternetState>.empty(),
          )
          as _i6.Stream<_i2.InternetState>);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  void connectivityResultAction(
    List<_i4.ConnectivityResult>? connectivityResult,
  ) => super.noSuchMethod(
    Invocation.method(#connectivityResultAction, [connectivityResult]),
    returnValueForMissingStub: null,
  );

  @override
  void emitInternetDisconnected() => super.noSuchMethod(
    Invocation.method(#emitInternetDisconnected, []),
    returnValueForMissingStub: null,
  );

  @override
  void emitInternetConnected() => super.noSuchMethod(
    Invocation.method(#emitInternetConnected, []),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void emit(_i2.InternetState? state) => super.noSuchMethod(
    Invocation.method(#emit, [state]),
    returnValueForMissingStub: null,
  );

  @override
  void onChange(_i9.Change<_i2.InternetState>? change) => super.noSuchMethod(
    Invocation.method(#onChange, [change]),
    returnValueForMissingStub: null,
  );

  @override
  void addError(Object? error, [StackTrace? stackTrace]) => super.noSuchMethod(
    Invocation.method(#addError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  void onError(Object? error, StackTrace? stackTrace) => super.noSuchMethod(
    Invocation.method(#onError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [Storage].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorage extends _i1.Mock implements _i10.Storage {
  MockStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  dynamic read(String? key) =>
      super.noSuchMethod(Invocation.method(#read, [key]));

  @override
  _i6.Future<void> write(String? key, dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#write, [key, value]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> delete(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [key]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i4.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<List<_i4.ConnectivityResult>> get onConnectivityChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onConnectivityChanged),
            returnValue: _i6.Stream<List<_i4.ConnectivityResult>>.empty(),
          )
          as _i6.Stream<List<_i4.ConnectivityResult>>);

  @override
  _i6.Future<List<_i4.ConnectivityResult>> checkConnectivity() =>
      (super.noSuchMethod(
            Invocation.method(#checkConnectivity, []),
            returnValue: _i6.Future<List<_i4.ConnectivityResult>>.value(
              <_i4.ConnectivityResult>[],
            ),
          )
          as _i6.Future<List<_i4.ConnectivityResult>>);
}

/// A class which mocks [InternetConnectionChecker].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetConnectionChecker extends _i1.Mock
    implements _i5.InternetConnectionChecker {
  MockInternetConnectionChecker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get requireAllAddressesToRespond =>
      (super.noSuchMethod(
            Invocation.getter(#requireAllAddressesToRespond),
            returnValue: false,
          )
          as bool);

  @override
  set requireAllAddressesToRespond(bool? _requireAllAddressesToRespond) =>
      super.noSuchMethod(
        Invocation.setter(
          #requireAllAddressesToRespond,
          _requireAllAddressesToRespond,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get enableToCheckForSlowConnection =>
      (super.noSuchMethod(
            Invocation.getter(#enableToCheckForSlowConnection),
            returnValue: false,
          )
          as bool);

  @override
  set enableToCheckForSlowConnection(bool? _enableToCheckForSlowConnection) =>
      super.noSuchMethod(
        Invocation.setter(
          #enableToCheckForSlowConnection,
          _enableToCheckForSlowConnection,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Duration get slowConnectionThreshold =>
      (super.noSuchMethod(
            Invocation.getter(#slowConnectionThreshold),
            returnValue: _FakeDuration_10(
              this,
              Invocation.getter(#slowConnectionThreshold),
            ),
          )
          as Duration);

  @override
  set slowConnectionThreshold(Duration? _slowConnectionThreshold) =>
      super.noSuchMethod(
        Invocation.setter(#slowConnectionThreshold, _slowConnectionThreshold),
        returnValueForMissingStub: null,
      );

  @override
  Duration get checkTimeout =>
      (super.noSuchMethod(
            Invocation.getter(#checkTimeout),
            returnValue: _FakeDuration_10(
              this,
              Invocation.getter(#checkTimeout),
            ),
          )
          as Duration);

  @override
  set checkTimeout(Duration? _checkTimeout) => super.noSuchMethod(
    Invocation.setter(#checkTimeout, _checkTimeout),
    returnValueForMissingStub: null,
  );

  @override
  Duration get checkInterval =>
      (super.noSuchMethod(
            Invocation.getter(#checkInterval),
            returnValue: _FakeDuration_10(
              this,
              Invocation.getter(#checkInterval),
            ),
          )
          as Duration);

  @override
  set checkInterval(Duration? _checkInterval) => super.noSuchMethod(
    Invocation.setter(#checkInterval, _checkInterval),
    returnValueForMissingStub: null,
  );

  @override
  List<_i5.AddressCheckOption> get addresses =>
      (super.noSuchMethod(
            Invocation.getter(#addresses),
            returnValue: <_i5.AddressCheckOption>[],
          )
          as List<_i5.AddressCheckOption>);

  @override
  set addresses(List<_i5.AddressCheckOption>? value) => super.noSuchMethod(
    Invocation.setter(#addresses, value),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Stream<_i5.InternetConnectionStatus> get onStatusChange =>
      (super.noSuchMethod(
            Invocation.getter(#onStatusChange),
            returnValue: _i6.Stream<_i5.InternetConnectionStatus>.empty(),
          )
          as _i6.Stream<_i5.InternetConnectionStatus>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i6.Future<bool> get hasConnection =>
      (super.noSuchMethod(
            Invocation.getter(#hasConnection),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<_i5.InternetConnectionStatus> get connectionStatus =>
      (super.noSuchMethod(
            Invocation.getter(#connectionStatus),
            returnValue: _i6.Future<_i5.InternetConnectionStatus>.value(
              _i5.InternetConnectionStatus.connected,
            ),
          )
          as _i6.Future<_i5.InternetConnectionStatus>);

  @override
  set setLastStatus(_i5.InternetConnectionStatus? status) => super.noSuchMethod(
    Invocation.setter(#setLastStatus, status),
    returnValueForMissingStub: null,
  );

  @override
  set setRequireAllAddressesToRespond(bool? value) => super.noSuchMethod(
    Invocation.setter(#setRequireAllAddressesToRespond, value),
    returnValueForMissingStub: null,
  );

  @override
  Iterable<_i6.Future<_i5.AddressCheckResult>> createAddressCheckFutures(
    List<_i5.AddressCheckOption>? addresses,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createAddressCheckFutures, [addresses]),
            returnValue: <_i6.Future<_i5.AddressCheckResult>>[],
          )
          as Iterable<_i6.Future<_i5.AddressCheckResult>>);

  @override
  _i6.Future<bool> checkConnectivity() =>
      (super.noSuchMethod(
            Invocation.method(#checkConnectivity, []),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<_i5.AddressCheckResult> isHostReachable(
    _i5.AddressCheckOption? option,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#isHostReachable, [option]),
            returnValue: _i6.Future<_i5.AddressCheckResult>.value(
              _FakeAddressCheckResult_11(
                this,
                Invocation.method(#isHostReachable, [option]),
              ),
            ),
          )
          as _i6.Future<_i5.AddressCheckResult>);

  @override
  _i6.Future<void> maybeEmitStatusUpdate({
    _i6.Timer? timer,
    Function? cancelCallback,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#maybeEmitStatusUpdate, [], {
              #timer: timer,
              #cancelCallback: cancelCallback,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void emitStatus(_i5.InternetConnectionStatus? newStatus) =>
      super.noSuchMethod(
        Invocation.method(#emitStatus, [newStatus]),
        returnValueForMissingStub: null,
      );

  @override
  void startMonitoring() => super.noSuchMethod(
    Invocation.method(#startMonitoring, []),
    returnValueForMissingStub: null,
  );

  @override
  void cancelStatusUpdate() => super.noSuchMethod(
    Invocation.method(#cancelStatusUpdate, []),
    returnValueForMissingStub: null,
  );

  @override
  void configure({
    Duration? timeout,
    Duration? interval,
    List<_i5.AddressCheckOption>? addresses,
    _i5.SlowConnectionConfig? slowConnectionConfig,
  }) => super.noSuchMethod(
    Invocation.method(#configure, [], {
      #timeout: timeout,
      #interval: interval,
      #addresses: addresses,
      #slowConnectionConfig: slowConnectionConfig,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [ToggleFavoriteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockToggleFavoriteUseCase extends _i1.Mock
    implements _i2.ToggleFavoriteUseCase {
  MockToggleFavoriteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, dynamic> call({
    required Map<String, dynamic>? currentFavorites,
    required String? hotelId,
    required Map<String, dynamic>? hotelData,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#call, [], {
              #currentFavorites: currentFavorites,
              #hotelId: hotelId,
              #hotelData: hotelData,
            }),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i7.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.BaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeBaseOptions_12(this, Invocation.getter(#options)),
          )
          as _i7.BaseOptions);

  @override
  set options(_i7.BaseOptions? _options) => super.noSuchMethod(
    Invocation.setter(#options, _options),
    returnValueForMissingStub: null,
  );

  @override
  _i7.HttpClientAdapter get httpClientAdapter =>
      (super.noSuchMethod(
            Invocation.getter(#httpClientAdapter),
            returnValue: _FakeHttpClientAdapter_13(
              this,
              Invocation.getter(#httpClientAdapter),
            ),
          )
          as _i7.HttpClientAdapter);

  @override
  set httpClientAdapter(_i7.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(#httpClientAdapter, _httpClientAdapter),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Transformer get transformer =>
      (super.noSuchMethod(
            Invocation.getter(#transformer),
            returnValue: _FakeTransformer_14(
              this,
              Invocation.getter(#transformer),
            ),
          )
          as _i7.Transformer);

  @override
  set transformer(_i7.Transformer? _transformer) => super.noSuchMethod(
    Invocation.setter(#transformer, _transformer),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Interceptors get interceptors =>
      (super.noSuchMethod(
            Invocation.getter(#interceptors),
            returnValue: _FakeInterceptors_15(
              this,
              Invocation.getter(#interceptors),
            ),
          )
          as _i7.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
    Invocation.method(#close, [], {#force: force}),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<_i7.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i7.Options? options,
    _i7.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #head,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(
                  #head,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i6.Future<_i7.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i7.Options? options,
    _i7.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #headUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(
                  #headUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i6.Future<_i7.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i7.Options? options,
    _i7.CancelToken? cancelToken,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(
                  #get,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i6.Future<_i7.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i7.Options? options,
    _i7.CancelToken? cancelToken,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(
                  #getUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i6.Future<_i7.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i7.Options? options,
    _i7.CancelToken? cancelToken,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(
                  #post,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i6.Future<_i7.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i7.Options? options,
    _i7.CancelToken? cancelToken,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #postUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(
                  #postUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i6.Future<_i7.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i7.Options? options,
    _i7.CancelToken? cancelToken,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(
                  #put,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i6.Future<_i7.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i7.Options? options,
    _i7.CancelToken? cancelToken,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #putUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(
                  #putUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i6.Future<_i7.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i7.Options? options,
    _i7.CancelToken? cancelToken,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(
                  #patch,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i6.Future<_i7.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i7.Options? options,
    _i7.CancelToken? cancelToken,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patchUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(
                  #patchUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i6.Future<_i7.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i7.Options? options,
    _i7.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(
                  #delete,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i6.Future<_i7.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i7.Options? options,
    _i7.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #deleteUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(
                  #deleteUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i6.Future<_i7.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i7.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i7.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i7.FileAccessMode? fileAccessMode = _i7.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i7.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #download,
              [urlPath, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i6.Future<_i7.Response<dynamic>>.value(
              _FakeResponse_16<dynamic>(
                this,
                Invocation.method(
                  #download,
                  [urlPath, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<dynamic>>);

  @override
  _i6.Future<_i7.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i7.ProgressCallback? onReceiveProgress,
    _i7.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i7.FileAccessMode? fileAccessMode = _i7.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i7.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #downloadUri,
              [uri, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i6.Future<_i7.Response<dynamic>>.value(
              _FakeResponse_16<dynamic>(
                this,
                Invocation.method(
                  #downloadUri,
                  [uri, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<dynamic>>);

  @override
  _i6.Future<_i7.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i7.CancelToken? cancelToken,
    _i7.Options? options,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #request,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(
                  #request,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i6.Future<_i7.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i7.CancelToken? cancelToken,
    _i7.Options? options,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #requestUri,
              [uri],
              {
                #data: data,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(
                  #requestUri,
                  [uri],
                  {
                    #data: data,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i6.Future<_i7.Response<T>> fetch<T>(_i7.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
            Invocation.method(#fetch, [requestOptions]),
            returnValue: _i6.Future<_i7.Response<T>>.value(
              _FakeResponse_16<T>(
                this,
                Invocation.method(#fetch, [requestOptions]),
              ),
            ),
          )
          as _i6.Future<_i7.Response<T>>);

  @override
  _i7.Dio clone({
    _i7.BaseOptions? options,
    _i7.Interceptors? interceptors,
    _i7.HttpClientAdapter? httpClientAdapter,
    _i7.Transformer? transformer,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#clone, [], {
              #options: options,
              #interceptors: interceptors,
              #httpClientAdapter: httpClientAdapter,
              #transformer: transformer,
            }),
            returnValue: _FakeDio_17(
              this,
              Invocation.method(#clone, [], {
                #options: options,
                #interceptors: interceptors,
                #httpClientAdapter: httpClientAdapter,
                #transformer: transformer,
              }),
            ),
          )
          as _i7.Dio);
}
